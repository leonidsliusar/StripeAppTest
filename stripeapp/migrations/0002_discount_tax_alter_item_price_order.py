# Generated by Django 4.2.7 on 2023-11-29 23:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("stripeapp", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Discount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("usd", "Dollar"), ("eur", "Euro"), ("rub", "Rub")],
                        default="usd",
                    ),
                ),
                (
                    "percent_off",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "max_redemptions",
                    models.IntegerField(
                        blank=True,
                        help_text="The max_redemptions and redeem_by values apply to the coupon across every application. For example, you can restrict a coupon to the first 50 usages of it, or you can make a coupon expire by a certain date.",
                        null=True,
                    ),
                ),
                (
                    "redeem_by",
                    models.DateTimeField(
                        blank=True,
                        help_text="The max_redemptions and redeem_by values apply to the coupon across every application. For example, you can restrict a coupon to the first 50 usages of it, or you can make a coupon expire by a certain date.",
                        null=True,
                    ),
                ),
                (
                    "applies_to",
                    models.IntegerField(
                        blank=True,
                        help_text="You can limit the products that are eligible for discounts using a coupon by adding the product IDs tothe applies_to hash in the Coupon object. Any promotion codes that map to this coupon only apply to the list of eligible products.",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "id",
                    models.CharField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("display_name", models.CharField()),
                ("inclusive", models.BooleanField(default=False)),
                (
                    "percentage",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("active", models.BooleanField(blank=True, null=True)),
                ("country", models.CharField(blank=True, null=True)),
                ("description", models.CharField(blank=True, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name="item",
            name="price",
            field=models.IntegerField(
                validators=[django.core.validators.MinValueValidator(0)]
            ),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "discounts",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="stripeapp.discount",
                    ),
                ),
                ("items", models.ManyToManyField(to="stripeapp.item")),
                (
                    "taxes",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="stripeapp.tax",
                    ),
                ),
            ],
        ),
    ]
